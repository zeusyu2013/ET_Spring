
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;

namespace ET
{
    [EnableClass]
    public sealed partial class BulletConfig : BeanBase
    {
        public BulletConfig(ByteBuf _buf)
        {
            Id = _buf.ReadInt();
            SelectTargetType = (SelectTargetType)_buf.ReadInt();
            SelectTargetsParam = SelectTargetsParams.DeserializeSelectTargetsParams(_buf);
            TotalTime = _buf.ReadInt();
            Interval = _buf.ReadInt();
            {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);IntervalCasts = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); IntervalCasts.Add(_e0);}}
            {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);IntervalActions = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); IntervalActions.Add(_e0);}}
            {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);CreateActions = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); CreateActions.Add(_e0);}}
            {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);DestroyActions = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); DestroyActions.Add(_e0);}}
            TargetCount = _buf.ReadInt();
            TickLimit = _buf.ReadInt();
            {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Tick1 = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); Tick1.Add(_e0);}}
            {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Tick2 = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); Tick2.Add(_e0);}}

            PostInit();
        }

        public static BulletConfig DeserializeBulletConfig(ByteBuf _buf)
        {
            return new BulletConfig(_buf);
        }

        /// <summary>
        /// 子弹编号
        /// </summary>
        public readonly int Id;

        /// <summary>
        /// 子弹目标选择类型
        /// </summary>
        public readonly SelectTargetType SelectTargetType;

        public readonly SelectTargetsParams SelectTargetsParam;

        /// <summary>
        /// 子弹持续时长
        /// </summary>
        public readonly int TotalTime;

        /// <summary>
        /// 结算间隔
        /// </summary>
        public readonly int Interval;

        /// <summary>
        /// 结算技能编号
        /// </summary>
        public readonly System.Collections.Generic.List<int> IntervalCasts;

        /// <summary>
        /// 结算时行为
        /// </summary>
        public readonly System.Collections.Generic.List<int> IntervalActions;

        /// <summary>
        /// 创建时触发行为
        /// </summary>
        public readonly System.Collections.Generic.List<int> CreateActions;

        /// <summary>
        /// 销毁前触发行为
        /// </summary>
        public readonly System.Collections.Generic.List<int> DestroyActions;

        /// <summary>
        /// 目标个数
        /// </summary>
        public readonly int TargetCount;

        /// <summary>
        /// 结算次数限制
        /// </summary>
        public readonly int TickLimit;

        /// <summary>
        /// 100ms执行
        /// </summary>
        public readonly System.Collections.Generic.List<int> Tick1;

        /// <summary>
        /// 1000ms执行
        /// </summary>
        public readonly System.Collections.Generic.List<int> Tick2;

        public const int __ID__ = 284876548;

        public override int GetTypeId() => __ID__;

        public override string ToString()
        {
            return "{ "
            + "Id:" + Id + ","
            + "SelectTargetType:" + SelectTargetType + ","
            + "SelectTargetsParam:" + SelectTargetsParam + ","
            + "TotalTime:" + TotalTime + ","
            + "Interval:" + Interval + ","
            + "IntervalCasts:" + Luban.StringUtil.CollectionToString(IntervalCasts) + ","
            + "IntervalActions:" + Luban.StringUtil.CollectionToString(IntervalActions) + ","
            + "CreateActions:" + Luban.StringUtil.CollectionToString(CreateActions) + ","
            + "DestroyActions:" + Luban.StringUtil.CollectionToString(DestroyActions) + ","
            + "TargetCount:" + TargetCount + ","
            + "TickLimit:" + TickLimit + ","
            + "Tick1:" + Luban.StringUtil.CollectionToString(Tick1) + ","
            + "Tick2:" + Luban.StringUtil.CollectionToString(Tick2) + ","
            + "}";
        }

        partial void PostInit();
    }
}
