
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;

namespace ET
{
    [EnableClass]
    public sealed partial class BuildingConfig : BeanBase
    {
        public BuildingConfig(ByteBuf _buf)
        {
            Id = _buf.ReadInt();
            Limit = _buf.ReadInt();
            {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);BuildingLevelInfos = new System.Collections.Generic.Dictionary<int, BuildingLevelInfo>(n0 * 3 / 2);for(var i0 = 0 ; i0 < n0 ; i0++) { int _k0;  _k0 = _buf.ReadInt(); BuildingLevelInfo _v0;  _v0 = BuildingLevelInfo.DeserializeBuildingLevelInfo(_buf);     BuildingLevelInfos.Add(_k0, _v0);}}

            PostInit();
        }

        public static BuildingConfig DeserializeBuildingConfig(ByteBuf _buf)
        {
            return new BuildingConfig(_buf);
        }

        /// <summary>
        /// 编号
        /// </summary>
        public readonly int Id;

        /// <summary>
        /// 可建造个数限制
        /// </summary>
        public readonly int Limit;

        public readonly System.Collections.Generic.Dictionary<int, BuildingLevelInfo> BuildingLevelInfos;

        public const int __ID__ = -701401290;

        public override int GetTypeId() => __ID__;

        public override string ToString()
        {
            return "{ "
            + "Id:" + Id + ","
            + "Limit:" + Limit + ","
            + "BuildingLevelInfos:" + Luban.StringUtil.CollectionToString(BuildingLevelInfos) + ","
            + "}";
        }

        partial void PostInit();
    }
}
