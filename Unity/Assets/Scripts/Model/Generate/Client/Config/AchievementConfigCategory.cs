
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using System.Collections.Generic;

namespace ET
{
    /// <summary>
    /// 成就配置表
    /// </summary>
    [Config]
    public partial class AchievementConfigCategory : Singleton<AchievementConfigCategory>
    {
        private readonly Dictionary<int, AchievementConfig> _dataMap;
        private readonly List<AchievementConfig> _dataList;

        public AchievementConfigCategory(ByteBuf _buf)
        {
            _dataMap = new Dictionary<int, AchievementConfig>();
            _dataList = new List<AchievementConfig>();

            for (int n = _buf.ReadSize(); n > 0; --n)
            {
                AchievementConfig _v;
                _v = AchievementConfig.DeserializeAchievementConfig(_buf);
                _dataList.Add(_v);
                _dataMap.Add(_v.Id, _v);
            }

            PostInit();
        }

        public Dictionary<int, AchievementConfig> DataMap => _dataMap;
        public List<AchievementConfig> DataList => _dataList;

        public AchievementConfig GetOrDefault(int key) => _dataMap.TryGetValue(key, out var v) ? v : null;
        public AchievementConfig Get(int key) => _dataMap[key];
        public AchievementConfig this[int key] => _dataMap[key];

        partial void PostInit();
    }
}
