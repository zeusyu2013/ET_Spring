syntax = "proto3";

package ET;

// ResponseType ObjectQueryResponse
message ObjectQueryRequest // IRequest
{
	int32 RpcId = 1;
	int64 Key = 2;
	int64 InstanceId = 3;
}

// ResponseType A2M_Reload
message M2A_Reload // IRequest
{
	int32 RpcId = 1;
}

message A2M_Reload // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType G2G_LockResponse
message G2G_LockRequest // IRequest
{
	int32 RpcId = 1;
	int64 Id = 2;
	string Address = 3;
}

message G2G_LockResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType G2G_LockReleaseResponse
message G2G_LockReleaseRequest // IRequest
{
	int32 RpcId = 1;
	int64 Id = 2;
	string Address = 3;
}

message G2G_LockReleaseResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType ObjectAddResponse
message ObjectAddRequest // IRequest
{
	int32 RpcId = 1;
	int32 Type = 2;
	int64 Key = 3;
	ActorId ActorId = 4;
}

message ObjectAddResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType ObjectLockResponse
message ObjectLockRequest // IRequest
{
	int32 RpcId = 1;
	int32 Type = 2;
	int64 Key = 3;
	ActorId ActorId = 4;
	int32 Time = 5;
}
message ObjectLockResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType ObjectUnLockResponse
message ObjectUnLockRequest // IRequest
{
	int32 RpcId = 1;
	int32 Type = 2;
	int64 Key = 3;
	ActorId OldActorId = 4;
	ActorId NewActorId = 5;
}
message ObjectUnLockResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType ObjectRemoveResponse
message ObjectRemoveRequest // IRequest
{
	int32 RpcId = 1;
	int32 Type = 2;
	int64 Key = 3;
}
message ObjectRemoveResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType ObjectGetResponse
message ObjectGetRequest // IRequest
{
	int32 RpcId = 1;
	int32 Type = 2;
	int64 Key = 3;
}
message ObjectGetResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int32 Type = 4;
	ActorId ActorId = 5;
}

// ResponseType G2R_GetLoginKey
message R2G_GetLoginKey // IRequest
{
	int32 RpcId = 1;
	int64 AccountId = 2;
}

message G2R_GetLoginKey // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 Key = 4;
	int64 GateId = 5;
}

message G2M_SessionDisconnect // ILocationMessage
{
	int32 RpcId = 1;
}

message ObjectQueryResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	bytes Entity = 4;
}

// ResponseType M2M_UnitTransferResponse
message M2M_UnitTransferRequest // IRequest
{
	int32 RpcId = 1;
	ActorId OldActorId = 2;
	bytes Unit = 3;
	repeated bytes Entitys = 4;
}

message M2M_UnitTransferResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

message Other2DBCache_AddOrUpdateUnitCache // IMessage
{
	int32 RpcId = 1;
	int64 UnitId = 2;
	repeated string EntityTypes = 3;
	repeated bytes EntityBytes = 4;
}

// ResponseType DBCache2Other_GetEntities
message Other2DBCache_GetEntities // IRequest
{
	int32 RpcId = 1;
	int64 UnitId = 2;
}

message DBCache2Other_GetEntities // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	repeated bytes EntityBytes = 4;
}

message Rank_FightScore
{
	int64 UnitId = 1;
	int64 FightScore = 2;
}

message Map2Rank_UpdateScore // IMessage
{
	int32 RpcId = 1;
	int64 UnitId = 2;
	int64 FightScore = 3;
}

message M2M_ChatBroadcast // IMessage
{
	int32 RpcId = 1;
	int32 ChannelId = 2;
	string Content = 3;
}

message GuildInfo
{
	int64 GuildId = 1;
	string GuildName = 2;
	int32 GuildLevel = 3;
	int32 GuildMemberCount = 4;
}

message GuildMemberInfo
{
	int64 UnitId = 1;
	int32 GuildMemberType = 2;
	int32 OnlineStatus = 3;
	int64 OfflineTime = 4;
}

// ResponseType G2M_CreateGuild
message M2G_CreateGuild // IRequest
{
	int32 RpcId = 1;
	string GuildName = 2;
	int64 UnitId = 3;
	string UnitName = 4;
}

message G2M_CreateGuild // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType G2M_GetAllGuilds
message M2G_GetAllGuilds // IRequest
{
	int32 RpcId = 1;
}

message G2M_GetAllGuilds // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	repeated GuildInfo GuildInfos = 4;
}

// ResponseType G2M_RequestJoinGuild
message M2G_RequestJoinGuild // IRequest
{
	int32 RpcId = 1;
	string GuildName = 2;
	int64 UnitId = 3;
}

message G2M_RequestJoinGuild // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType G2M_RequestQuitGuild
message M2G_RequestQuitGuild // IRequest
{
	int32 RpcId = 1;
	string GuildName = 2;
	int64 UnitId = 3;
}

message G2M_RequestQuitGuild // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

message NewDayNotify // IMessage
{
	int32 RpcId = 1;
}

message DailyNotify // IMessage
{
	int32 RpcId = 1;
	int32 DailyConfig = 2;
	bool OpenOrClose = 3;
}

message GameRequestInfo
{
	int64 UnitId = 1;
	int64 SenderUnitId = 2;
	int32 RequestType = 3;
}

// ResponseType Request2Manager_ShutDown
message Manager2Request_ShutDown // IRequest
{
	int32 RpcId = 1;
}

message Request2Manager_ShutDown // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType Request2M_AddRequest
message M2Request_AddRequest // IRequest
{
	int32 RpcId = 1;
	int64 UnitId = 2;
	int64 SenderUnitId = 3;
	int32 RequestType = 4;
}

message Request2M_AddRequest // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType Request2M_GetRequests
message M2Request_GetRequests // IRequest
{
	int32 RpcId = 1;
	int64 UnitId = 2;
}

message Request2M_GetRequests // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	repeated GameRequestInfo GameRequestInfos = 4;
}

message Pay2M_Pay // IMessage
{
	int32 RpcId = 1;
	int64 UnitId = 2;
	string ProductId = 3;
}